{
    "name": "xenorchestra",
    "description": "A Pulumi package for creating and managing xenorchestra cloud resources.",
    "keywords": [
        "pulumi",
        "xenorchestra",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`xenorchestra` Terraform Provider](https://github.com/ddelnano/terraform-provider-xenorchestra).",
    "repository": "https://github.com/aslak11/pulumi-xenorchestra",
    "publisher": "aslak11",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "compatibility": "tfbridge20",
            "namespaces": null,
            "packageReferences": {
                "Pulumi": "3.*"
            }
        },
        "go": {
            "generateExtraInputTypes": true,
            "generateResourceContainerTypes": true,
            "importBasePath": "github.com/pulumi/pulumi-xenorchestra/sdk/go/xenorchestra"
        },
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing xenorchestra cloud resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ddelnano/terraform-provider-xenorchestra)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-xenorchestra` repo](https://github.com/aslak11/pulumi-xenorchestra/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-xenorchestra` repo](https://github.com/ddelnano/terraform-provider-xenorchestra/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/ddelnano/terraform-provider-xenorchestra)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-xenorchestra` repo](https://github.com/aslak11/pulumi-xenorchestra/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-xenorchestra` repo](https://github.com/ddelnano/terraform-provider-xenorchestra/issues).",
            "requires": {
                "pulumi": "\u003e=3.0.0,\u003c4.0.0"
            }
        }
    },
    "config": {
        "variables": {
            "insecure": {
                "type": "boolean",
                "description": "Whether SSL should be verified or not\n"
            },
            "password": {
                "type": "string",
                "description": "Password for xoa api\n"
            },
            "url": {
                "type": "string",
                "description": "Hostname of the xoa router\n"
            },
            "username": {
                "type": "string",
                "description": "User account for xoa api\n"
            }
        },
        "defaults": [
            "password",
            "url",
            "username"
        ]
    },
    "types": {
        "xenorchestra:index/ResourceSetLimit:ResourceSetLimit": {
            "properties": {
                "quantity": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "type": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "quantity",
                "type"
            ]
        },
        "xenorchestra:index/VmCdrom:VmCdrom": {
            "properties": {
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "id"
            ]
        },
        "xenorchestra:index/VmDisk:VmDisk": {
            "properties": {
                "attached": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameDescription": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "position": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "srId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vbdId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vdiId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nameLabel",
                "size",
                "srId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "nameLabel",
                        "position",
                        "size",
                        "srId",
                        "vbdId",
                        "vdiId"
                    ]
                }
            }
        },
        "xenorchestra:index/VmNetwork:VmNetwork": {
            "properties": {
                "attached": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "device": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv4Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "macAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "networkId"
            ],
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "device",
                        "ipv4Addresses",
                        "ipv6Addresses",
                        "macAddress",
                        "networkId"
                    ]
                }
            }
        },
        "xenorchestra:index/getHostsHost:getHostsHost": {
            "properties": {
                "cpus": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memory": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryUsage": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "poolId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cpus",
                "id",
                "memory",
                "memoryUsage",
                "nameLabel",
                "poolId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "xenorchestra:index/getVmsVm:getVmsVm": {
            "properties": {
                "affinityHost": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "autoPoweron": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "blockedOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cloudNetworkConfig": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "coreOs": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuCap": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpuWeight": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "cpus": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/getVmsVmDisk:getVmsVmDisk"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "expNestedHvm": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "highAvailability": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "host": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "hvmBootFirmware": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "id": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv4Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "memoryMax": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameDescription": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/getVmsVmNetwork:getVmsVmNetwork"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "powerState": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "resourceSet": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "startDelay": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "template": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vga": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "videoram": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "waitForIp": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "cpus",
                "disks",
                "id",
                "ipv4Addresses",
                "ipv6Addresses",
                "memoryMax",
                "nameLabel",
                "networks",
                "powerState",
                "template"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "xenorchestra:index/getVmsVmDisk:getVmsVmDisk": {
            "properties": {
                "attached": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameDescription": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "nameLabel": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "position": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "size": {
                    "type": "integer",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "srId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vbdId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "vdiId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "nameLabel",
                "position",
                "size",
                "srId",
                "vbdId",
                "vdiId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        },
        "xenorchestra:index/getVmsVmNetwork:getVmsVmNetwork": {
            "properties": {
                "attached": {
                    "type": "boolean",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "device": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv4Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "macAddress": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                },
                "networkId": {
                    "type": "string",
                    "language": {
                        "python": {
                            "mapCase": false
                        }
                    }
                }
            },
            "type": "object",
            "required": [
                "device",
                "ipv4Addresses",
                "ipv6Addresses",
                "macAddress",
                "networkId"
            ],
            "language": {
                "nodejs": {
                    "requiredInputs": []
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the xenorchestra package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "insecure": {
                "type": "boolean",
                "description": "Whether SSL should be verified or not\n"
            },
            "password": {
                "type": "string",
                "description": "Password for xoa api\n"
            },
            "url": {
                "type": "string",
                "description": "Hostname of the xoa router\n"
            },
            "username": {
                "type": "string",
                "description": "User account for xoa api\n"
            }
        },
        "required": [
            "password",
            "url",
            "username"
        ],
        "inputProperties": {
            "insecure": {
                "type": "boolean",
                "description": "Whether SSL should be verified or not\n"
            },
            "password": {
                "type": "string",
                "description": "Password for xoa api\n"
            },
            "url": {
                "type": "string",
                "description": "Hostname of the xoa router\n"
            },
            "username": {
                "type": "string",
                "description": "User account for xoa api\n"
            }
        },
        "requiredInputs": [
            "password",
            "url",
            "username"
        ]
    },
    "resources": {
        "xenorchestra:index/acl:Acl": {
            "properties": {
                "action": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "subject": {
                    "type": "string"
                }
            },
            "required": [
                "action",
                "object",
                "subject"
            ],
            "inputProperties": {
                "action": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "object": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "subject": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "action",
                "object",
                "subject"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Acl resources.\n",
                "properties": {
                    "action": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "object": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "subject": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "xenorchestra:index/cloudConfig:CloudConfig": {
            "properties": {
                "name": {
                    "type": "string"
                },
                "template": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "template"
            ],
            "inputProperties": {
                "name": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "template": {
                    "type": "string",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "template"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering CloudConfig resources.\n",
                "properties": {
                    "name": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "template": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "xenorchestra:index/resourceSet:ResourceSet": {
            "properties": {
                "limits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/ResourceSetLimit:ResourceSetLimit"
                    }
                },
                "name": {
                    "type": "string"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "required": [
                "limits",
                "name"
            ],
            "inputProperties": {
                "limits": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/ResourceSetLimit:ResourceSetLimit"
                    }
                },
                "name": {
                    "type": "string"
                },
                "objects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "subjects": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            },
            "requiredInputs": [
                "limits"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ResourceSet resources.\n",
                "properties": {
                    "limits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/xenorchestra:index/ResourceSetLimit:ResourceSetLimit"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "objects": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "subjects": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object"
            }
        },
        "xenorchestra:index/vm:Vm": {
            "properties": {
                "affinityHost": {
                    "type": "string"
                },
                "autoPoweron": {
                    "type": "boolean"
                },
                "blockedOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cdrom": {
                    "$ref": "#/types/xenorchestra:index/VmCdrom:VmCdrom"
                },
                "cloudConfig": {
                    "type": "string"
                },
                "cloudNetworkConfig": {
                    "type": "string"
                },
                "coreOs": {
                    "type": "boolean"
                },
                "cpuCap": {
                    "type": "integer"
                },
                "cpuWeight": {
                    "type": "integer"
                },
                "cpus": {
                    "type": "integer"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/VmDisk:VmDisk"
                    }
                },
                "expNestedHvm": {
                    "type": "boolean"
                },
                "highAvailability": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "hvmBootFirmware": {
                    "type": "string"
                },
                "installationMethod": {
                    "type": "string"
                },
                "ipv4Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "ipv6Addresses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "memoryMax": {
                    "type": "integer"
                },
                "nameDescription": {
                    "type": "string"
                },
                "nameLabel": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/VmNetwork:VmNetwork"
                    }
                },
                "powerState": {
                    "type": "string"
                },
                "resourceSet": {
                    "type": "string"
                },
                "startDelay": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template": {
                    "type": "string"
                },
                "vga": {
                    "type": "string"
                },
                "videoram": {
                    "type": "integer"
                },
                "waitForIp": {
                    "type": "boolean"
                }
            },
            "required": [
                "cpus",
                "disks",
                "ipv4Addresses",
                "ipv6Addresses",
                "memoryMax",
                "nameLabel",
                "networks",
                "powerState",
                "template"
            ],
            "inputProperties": {
                "affinityHost": {
                    "type": "string"
                },
                "autoPoweron": {
                    "type": "boolean"
                },
                "blockedOperations": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "cdrom": {
                    "$ref": "#/types/xenorchestra:index/VmCdrom:VmCdrom"
                },
                "cloudConfig": {
                    "type": "string"
                },
                "cloudNetworkConfig": {
                    "type": "string"
                },
                "coreOs": {
                    "type": "boolean"
                },
                "cpuCap": {
                    "type": "integer"
                },
                "cpuWeight": {
                    "type": "integer"
                },
                "cpus": {
                    "type": "integer"
                },
                "disks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/VmDisk:VmDisk"
                    }
                },
                "expNestedHvm": {
                    "type": "boolean"
                },
                "highAvailability": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "hvmBootFirmware": {
                    "type": "string"
                },
                "installationMethod": {
                    "type": "string"
                },
                "memoryMax": {
                    "type": "integer"
                },
                "nameDescription": {
                    "type": "string"
                },
                "nameLabel": {
                    "type": "string"
                },
                "networks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/xenorchestra:index/VmNetwork:VmNetwork"
                    }
                },
                "resourceSet": {
                    "type": "string"
                },
                "startDelay": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "template": {
                    "type": "string",
                    "willReplaceOnChanges": true
                },
                "vga": {
                    "type": "string"
                },
                "videoram": {
                    "type": "integer"
                },
                "waitForIp": {
                    "type": "boolean"
                }
            },
            "requiredInputs": [
                "cpus",
                "disks",
                "memoryMax",
                "nameLabel",
                "networks",
                "template"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Vm resources.\n",
                "properties": {
                    "affinityHost": {
                        "type": "string"
                    },
                    "autoPoweron": {
                        "type": "boolean"
                    },
                    "blockedOperations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cdrom": {
                        "$ref": "#/types/xenorchestra:index/VmCdrom:VmCdrom"
                    },
                    "cloudConfig": {
                        "type": "string"
                    },
                    "cloudNetworkConfig": {
                        "type": "string"
                    },
                    "coreOs": {
                        "type": "boolean"
                    },
                    "cpuCap": {
                        "type": "integer"
                    },
                    "cpuWeight": {
                        "type": "integer"
                    },
                    "cpus": {
                        "type": "integer"
                    },
                    "disks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/xenorchestra:index/VmDisk:VmDisk"
                        }
                    },
                    "expNestedHvm": {
                        "type": "boolean"
                    },
                    "highAvailability": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "hvmBootFirmware": {
                        "type": "string"
                    },
                    "installationMethod": {
                        "type": "string"
                    },
                    "ipv4Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ipv6Addresses": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "memoryMax": {
                        "type": "integer"
                    },
                    "nameDescription": {
                        "type": "string"
                    },
                    "nameLabel": {
                        "type": "string"
                    },
                    "networks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/xenorchestra:index/VmNetwork:VmNetwork"
                        }
                    },
                    "powerState": {
                        "type": "string"
                    },
                    "resourceSet": {
                        "type": "string"
                    },
                    "startDelay": {
                        "type": "integer"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "template": {
                        "type": "string",
                        "willReplaceOnChanges": true
                    },
                    "vga": {
                        "type": "string"
                    },
                    "videoram": {
                        "type": "integer"
                    },
                    "waitForIp": {
                        "type": "boolean"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "xenorchestra:index/getCloudConfig:getCloudConfig": {
            "inputs": {
                "description": "A collection of arguments for invoking getCloudConfig.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getCloudConfig.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    },
                    "template": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "template",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getHost:getHost": {
            "inputs": {
                "description": "A collection of arguments for invoking getHost.\n",
                "properties": {
                    "nameLabel": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHost.\n",
                "properties": {
                    "cpus": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "memory": {
                        "type": "integer"
                    },
                    "memoryUsage": {
                        "type": "integer"
                    },
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "cpus",
                    "memory",
                    "memoryUsage",
                    "nameLabel",
                    "poolId",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getHosts:getHosts": {
            "inputs": {
                "description": "A collection of arguments for invoking getHosts.\n",
                "properties": {
                    "poolId": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string"
                    },
                    "sortOrder": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "poolId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getHosts.\n",
                "properties": {
                    "hosts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/xenorchestra:index/getHostsHost:getHostsHost"
                        }
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "master": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "sortBy": {
                        "type": "string"
                    },
                    "sortOrder": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "hosts",
                    "master",
                    "poolId",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getNetwork:getNetwork": {
            "inputs": {
                "description": "A collection of arguments for invoking getNetwork.\n",
                "properties": {
                    "bridge": {
                        "type": "string"
                    },
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getNetwork.\n",
                "properties": {
                    "bridge": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "bridge",
                    "nameLabel",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getPif:getPif": {
            "inputs": {
                "description": "A collection of arguments for invoking getPif.\n",
                "properties": {
                    "device": {
                        "type": "string"
                    },
                    "hostId": {
                        "type": "string"
                    },
                    "vlan": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "device",
                    "vlan"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPif.\n",
                "properties": {
                    "attached": {
                        "type": "boolean"
                    },
                    "device": {
                        "type": "string"
                    },
                    "host": {
                        "type": "string"
                    },
                    "hostId": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "network": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    },
                    "vlan": {
                        "type": "integer"
                    }
                },
                "type": "object",
                "required": [
                    "attached",
                    "device",
                    "host",
                    "hostId",
                    "network",
                    "poolId",
                    "uuid",
                    "vlan",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getPool:getPool": {
            "inputs": {
                "description": "A collection of arguments for invoking getPool.\n",
                "properties": {
                    "nameLabel": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getPool.\n",
                "properties": {
                    "cpus": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "master": {
                        "type": "string"
                    },
                    "nameLabel": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "cpus",
                    "description",
                    "master",
                    "nameLabel",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getResourceSet:getResourceSet": {
            "inputs": {
                "description": "A collection of arguments for invoking getResourceSet.\n",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getResourceSet.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "name",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getSr:getSr": {
            "inputs": {
                "description": "A collection of arguments for invoking getSr.\n",
                "properties": {
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getSr.\n",
                "properties": {
                    "container": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nameLabel": {
                        "type": "string"
                    },
                    "physicalUsage": {
                        "type": "integer"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "srType": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "usage": {
                        "type": "integer"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "container",
                    "nameLabel",
                    "physicalUsage",
                    "size",
                    "srType",
                    "usage",
                    "uuid",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getTemplate:getTemplate": {
            "inputs": {
                "description": "A collection of arguments for invoking getTemplate.\n",
                "properties": {
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getTemplate.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "uuid": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel",
                    "uuid",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getUser:getUser": {
            "inputs": {
                "description": "A collection of arguments for invoking getUser.\n",
                "properties": {
                    "searchInSession": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "username"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getUser.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "searchInSession": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "username",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getVdi:getVdi": {
            "inputs": {
                "description": "A collection of arguments for invoking getVdi.\n",
                "properties": {
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVdi.\n",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "nameLabel": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "nameLabel",
                    "id"
                ]
            }
        },
        "xenorchestra:index/getVms:getVms": {
            "inputs": {
                "description": "A collection of arguments for invoking getVms.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "powerState": {
                        "type": "string"
                    }
                },
                "type": "object",
                "required": [
                    "poolId"
                ]
            },
            "outputs": {
                "description": "A collection of values returned by getVms.\n",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string",
                        "description": "The provider-assigned unique ID for this managed resource.\n"
                    },
                    "poolId": {
                        "type": "string"
                    },
                    "powerState": {
                        "type": "string"
                    },
                    "vms": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/xenorchestra:index/getVmsVm:getVmsVm"
                        }
                    }
                },
                "type": "object",
                "required": [
                    "poolId",
                    "vms",
                    "id"
                ]
            }
        }
    }
}